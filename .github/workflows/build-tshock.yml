name: Build TShock

on:  
  push:
    tags:
      - tshock-*
  workflow_dispatch:

jobs:
  build-tshock:
    name: build tshock
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Setup go to build TerrariaServerWrapper
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      # Build TerrariaServerWrapper (we only build a snapshot instead of a full release)
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: --snapshot --clean
          workdir: TerrariaServerWrapper

      # Setup some things for the docker build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log into GHCR
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Generate docker image tags
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/trnubo/terraria
          tags: |
            latest
            tshock-latest
            type=ref,event=tag

      # Build and push docker images
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./tshock
          file: tshock/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
